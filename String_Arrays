package week1;

import java.util.Arrays;

public class Day3Assignment {
    public static void ascendingOrder() {
        int[] data = {3, 2, 11, 4, 6, 7};
        int i;
        Arrays.sort(data);
        int lastBefore = data[data.length - 2];
        for (i = 0; i < data.length; i++) {
            System.out.println(data[i]);
        }
        System.out.println("The last before element after sorted is : " + lastBefore);
    }

    public static void missingElement() {

        int[] a = {1, 2, 3, 4, 7, 6, 8};
        Arrays.sort(a); // sort the array in ascending order
        for (int i = 0; i < a.length; i++) {
            if (a[i+1] - a[i] != 1 ) {
                int missingNumber = a[i]+ 1;
                System.out.println("Missing value: " + missingNumber);
               break;
            }
        }

    }
    public static void duplicateNumbers(){
        int[] arr = {14,12,13,11,15,14,18,16,17,19,18,17,20};
        for (int i = 0; i < arr.length; i++) {
            for (int j = 0; j < arr.length; j++) {
                if (arr[i] == arr[j]){
                    System.out.println(arr[i]);
                }
            }
        }
    }
    public  static void intersection(){
        int [] a = {3,2,11,4,6,7};
        int [] b = {1,2,8,4,9,7};
        for (int i = 0; i < a.length; i++) {
            for (int j = 0; j < b.length; j++) {
                if(a[i]==b[j]){
                    System.out.println("The element presents in both the arrays are - " + a[i]);
                }

            }

        }
    }
    public static void oddIndex (){
        String test = "changeme";
        char [] cha = test.toCharArray();
        for (int i = 0; i < cha.length; i++) {
            if(i%2!=0){
                cha[i]= Character.toUpperCase(cha[i]);

            }
        }
        System.out.println("The modified String is:" + new String(cha));
    }
    public static void removeDuplicate() {
        String text = "We learn java basics as part of java sessions in java week1";
        String[] words = text.split(" ");
        for (int i = 0; i < words.length; i++) {
            int total = 0;
            for (int j = 0; j < words.length; j++) {
                if (words[i].equals(words[j])) {
                    total++;
                }
            }
            if (total > 1) {
                words[i] = "";
            }}
        StringBuilder resultbinder = new StringBuilder();
        for (int i = 0; i < words.length; i++) {
            if (!words[i].isEmpty()) {
                resultbinder.append(words[i]).append(" ");
            }

        }
        String result = resultbinder.toString().trim();
        System.out.println("Result: " + result);

    }
    public static void reverseEvenWords() {

        String test = "I am a software tester";

        String[] words = test.split(" ");

        for (int i = 0; i < words.length; i++) {
            if (i % 2 == 0) {

                char[] charArray = words[i].toCharArray();

                System.out.print(" ");

                for (int j = charArray.length - 1; j >= 0; j--) {

                    System.out.print(charArray[j]);
                }
            }
            else {
                // Print the odd position words as it is
                System.out.print(words[i]);

            }
            if (i != words.length - 1) {
                System.out.print(" ");
            }
        }
    }
    public static void secondLargest(){
        int data[] = {3,2,11,4,6,7};
        int len = data.length;
        Arrays.sort(data);
        for (int i = 0; i < data.length ; i++) {
            System.out.println(data[i]);

        }
        System.out.println("The Second Largest Number is " + data[data.length-2]);
    }

    public static void main(String[] args) {
        ascendingOrder();
        missingElement();
        duplicateNumbers();
        intersection();
        oddIndex();
        removeDuplicate();
        reverseEvenWords();
        secondLargest();
    }

}
